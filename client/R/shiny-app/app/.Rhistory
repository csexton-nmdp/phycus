shiny::runApp('phycus/shiny-app/app')
runApp()
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
?POST
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
install.packages("auth0")
auth0::use_auth0()
usethis::edit_r_environ()
install.packages("usethis")
usethis::edit_r_environ()
usethis::edit_r_environ(
AUTH0_USER=csexton@nmdp.org
AUTH0_KEY=E4fs2CBZaaVkkgQv3FMmWSWTugPeeEHr
AUTH0_SECRET=97-0B9IGRGHmScH4hQsMpLIfqwIFSYvIjsf1W3RlKSFVd771izBHUOZiIYhqnczq
)
shiny::runApp('phycus/shiny-app/app')
options(shiny.port = 8080)
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
shiny::runApp('phycus/shiny-app/app')
shiny::runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp()
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
library(shiny)
ui <- fluidPage(
fluidRow(plotOutput("plot"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
plot(1:10)
})
}
# note that here we're using a different version of shinyApp!
auth0::shinyAppAuth0(ui, server)
options(auth0_config_file = "/Users/csexton/phycus/shiny-app/app/_auth0.yml")
ui <- fluidPage(
fluidRow(plotOutput("plot"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
plot(1:10)
})
}
# note that here we're using a different version of shinyApp!
auth0::shinyAppAuth0(ui, server)
# note that here we're using a different version of shinyApp!
auth0::shinyAppAuth0(ui, server)
# note that here we're using a different version of shinyApp!
auth0::shinyAppAuth0(ui, server)
# note that here we're using a different version of shinyApp!
auth0::shinyAppAuth0(ui, server)
# note that here we're using a different version of shinyApp!
auth0::shinyAppAuth0(ui, server)
shiny::runApp('phycus/shiny-app/app')
options(shiny.port = 8088)
runApp('phycus/shiny-app/app')
View(books)
library(RSQLite)
install.packages("RSQLite")
install.packages("dbmisc")
install.packages("dbmisc",
repos = c("https://skranz-repo.github.io/drat/",getOption("repos")))
db <- dbConnect(SQLite(), 'pineapple.db')
library(RSQLite)
db <- dbConnect(SQLite(), 'pineapple.db')
setwd('~/phycus/shiny-app/api/')
db <- dbConnect(SQLite(), '~/phycus/shiny-app/db/hfc.db')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
pop_list <- dbGetQuery(db, "SELECT name FROM cohort")
db <- dbConnect(SQLite(), '~/phycus/shiny-app/db/hfc.db')
pop_list <- dbGetQuery(db, "SELECT name FROM cohort")
View(pop_list)
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
f
runApp('~/phycus/shiny-app/app')
library(DBI)
library(DBI)
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
dbGetQuery(db,"SELECT LAST_INSERT_ROWID();")
dbGetQuery(db,"SELECT FROM method LAST_INSERT_ROWID();")
# POPULATE method,cohort,population
sql <- "INSERT INTO method (name) VALUES (?name)"
query <- sqlInterpolate(db, sql, name = input$cohort_name)
query <- sqlInterpolate(db, sql, name = 'x')
print(dbSendQuery(db, query))
dbGetQuery(db,"SELECT method LAST_INSERT_ROWID();")
dbGetQuery(db,"SELECT LAST_INSERT_ROWID();")
# POPULATE method,cohort,population
sql <- "INSERT INTO population (name) VALUES (?name)"
query <- sqlInterpolate(db, sql, name = 'x')
print(dbSendQuery(db, query))
dbGetQuery(db,"SELECT LAST_INSERT_ROWID();")
# POPULATE method,cohort,population
sql <- "INSERT INTO method (name) VALUES (?name)"
query <- sqlInterpolate(db, sql, name = 'x')
print(dbSendQuery(db, query))
dbGetQuery(db,"SELECT LAST_INSERT_ROWID();")
# POPULATE method,cohort,population
sql <- "INSERT INTO method (name) VALUES (?name)"
query <- sqlInterpolate(db, sql, name = 'x')
print(dbSendQuery(db, query))
dbGetQuery(db,"SELECT LAST_INSERT_ROWID();")
dbGetQuery(db,"SELECT max(cohort_id) FROM cohort;")
dbGetQuery(db,"SELECT max(method_id) FROM method;")
dbGetQuery(db,"SELECT max(cohort_id) FROM cohort;")[1]
dbGetQuery(db,"SELECT max(cohort_id) FROM cohort;")[[1]]
dbGetQuery(db,"SELECT max(cohort_id) FROM cohort;")[1,]
dbGetQuery(db,"SELECT max(cohort_id) FROM cohort;")[1,1]
runApp('~/phycus/shiny-app/app')
paste0("INSERT INTO hfc_submission (population_id,cohort_id,method_id,user_id) VALUES
(",population_id,",",cohort_id,",",method_id,",",user_id,")")
paste0("INSERT INTO hfc_submission (population_id,cohort_id,method_id,user_id) VALUES
(",population_id,",",cohort_id,",",method_id,",",user_id,")")
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
install.packages("rhandsontable")
runApp('~/phycus/shiny-app/app')
library(rhandsontable)
runApp('~/phycus/shiny-app/app')
method_id <- dbGetQuery(db,
"SELECT h.haplotype as haplotype,
h.frequency as frequency,
cohort.name,
cohort.ION_number,
method.name,
population.name,
user.username AS username
FROM  haplotype h
LEFT JOIN hfc_submission hs ON hs.hfc_entry_id = h.hfc_entry_id
LEFT JOIN cohort ON cohort.cohort_id = hs.cohort_id
LEFT JOIN method ON method.method_id = hs.method_id
LEFT JOIN population ON population.population_id = hs.population_id
LEFT JOIN user ON user.user_id = hs.population_id
;")
get_db <- dbGetQuery(db,
"SELECT h.haplotype as haplotype,
h.frequency as frequency,
cohort.name,
cohort.ION_number,
method.name,
population.name,
user.username AS username
FROM  haplotype h
LEFT JOIN hfc_submission hs ON hs.hfc_entry_id = h.hfc_entry_id
LEFT JOIN cohort ON cohort.cohort_id = hs.cohort_id
LEFT JOIN method ON method.method_id = hs.method_id
LEFT JOIN population ON population.population_id = hs.population_id
LEFT JOIN user ON user.user_id = hs.population_id
;")
shiny::runGitHub("rhandsontable", "jrowen",
subdir="inst/examples/rhandsontable_search")
install.packages("DT")
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
install.packages("shinythemes")
runApp('~/phycus/shiny-app/app')
library(shinythemes)
runApp('~/phycus/shiny-app/app')
library(shinythemes)
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
cohort_list <- dbGetQuery(db, "SELECT name,ION_number FROM cohort")
View(cohort_list)
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp('~/phycus/shiny-app/app')
runApp()
runApp()
runApp()
