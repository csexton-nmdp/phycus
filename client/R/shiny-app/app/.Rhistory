shiny::runApp('phycus/shiny-app/app')
runApp()
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
?POST
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
install.packages("auth0")
auth0::use_auth0()
usethis::edit_r_environ()
install.packages("usethis")
usethis::edit_r_environ()
usethis::edit_r_environ(
AUTH0_USER=csexton@nmdp.org
AUTH0_KEY=E4fs2CBZaaVkkgQv3FMmWSWTugPeeEHr
AUTH0_SECRET=97-0B9IGRGHmScH4hQsMpLIfqwIFSYvIjsf1W3RlKSFVd771izBHUOZiIYhqnczq
)
shiny::runApp('phycus/shiny-app/app')
options(shiny.port = 8080)
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
shiny::runApp('phycus/shiny-app/app')
shiny::runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp()
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
library(shiny)
ui <- fluidPage(
fluidRow(plotOutput("plot"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
plot(1:10)
})
}
# note that here we're using a different version of shinyApp!
auth0::shinyAppAuth0(ui, server)
options(auth0_config_file = "/Users/csexton/phycus/shiny-app/app/_auth0.yml")
ui <- fluidPage(
fluidRow(plotOutput("plot"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
plot(1:10)
})
}
# note that here we're using a different version of shinyApp!
auth0::shinyAppAuth0(ui, server)
# note that here we're using a different version of shinyApp!
auth0::shinyAppAuth0(ui, server)
# note that here we're using a different version of shinyApp!
auth0::shinyAppAuth0(ui, server)
# note that here we're using a different version of shinyApp!
auth0::shinyAppAuth0(ui, server)
# note that here we're using a different version of shinyApp!
auth0::shinyAppAuth0(ui, server)
options(shiny.port = 8080)
shiny::runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
options(shiny.port = 8088)
runApp('phycus/shiny-app/app')
pop_list <- httr::GET(url="http://localhost:8080/cohort",)
pop_list <- httr::GET(url="http://localhost:8080/cohort",)
View(pop_list)
pop_list <- httr::GET(url="http://localhost:8080/cohort",)
pop_list <- httr::GET(url="http://localhost:8080/cohort",)
pop_list <- httr::content(pop_list, type = "application/json")
pop_list$CohortsList
pop_list$CohortsList$name
pop_list$CohortsList[[1]]$name
pop_list$CohortsList[[2]]$name
pop_list$CohortsList[[1]]$name
View(pop_list)
library(jsonlite)
pop_list <- httr::GET(url="http://localhost:8080/cohort",)
pop_list <- httr::content(pop_list, type = "text")
new <- fromJSON(pop_list)
View(new)
pop_list <- httr::content(pop_list, type = "application/json")
pop_list <- httr::GET(url="http://localhost:8080/cohort",)
pop_list <- httr::content(pop_list, type = "application/json")
pop_list <- httr::content(pop_list, type = "application/json")
View(pop_list)
pop_list$CohortsList['name']
data.frame(pop_list$CohortsList)
pop_list <- data.frame(pop_list$CohortsList)
runApp('phycus/shiny-app/app')
pop_list <- httr::GET(url="http://localhost:8080/population",)
pop_list <- httr::GET(url="http://localhost:8080/population",)
pop_list <- httr::content(pop_list, type = "application/json")
View(pop_list)
pop_list <- data.frame(pop_list$PopulationList)
updateSelectizeInput(session, "population", choices = pop_list$name, server = T)
runApp('phycus/shiny-app/app')
View(pop_list)
pop_list <- httr::GET(url="http://localhost:8080/population",)
pop_list <- httr::content(pop_list, type = "application/json")
View(pop_list)
pop_list <- httr::GET(url="http://localhost:8080/population",)
pop_list <- httr::content(pop_list, type = "application/json")
myData_df <- map_dfr(pop_list[[1]], as.tibble)
pop_list <- httr::GET(url="http://localhost:8080/population",)
pop_list <- httr::content(pop_list, type = "application/json")
myData_df <- map_dfr(pop_list[[1]], as_tibble)
View(myData_df)
runApp('phycus/shiny-app/app')
pop_list <- httr::GET(url="http://localhost:8080/population",)
pop_list <- httr::content(pop_list, type = "application/json")
pop_list <- map_dfr(pop_list[[1]], as_tibble)
View(pop_list)
pop_list$name
pop_list <- httr::GET(url="http://localhost:8080/population",)
pop_list <- httr::content(pop_list, type = "application/json")
pop_list <- map_dfr(pop_list[[1]], as_tibble)
pop_list$name
runApp('phycus/shiny-app/app')
cohort_list <- httr::GET(url="http://localhost:8080/cohort",)
cohort_list <- httr::GET(url="http://localhost:8080/cohort",)
cohort_list <- httr::content(pop_list, type = "application/json")
cohort_list <- map_dfr(cohort_list[[1]], as_tibble)
View(cohort_list)
cohort_list <- httr::GET(url="http://localhost:8080/cohort",)
cohort_list <- httr::content(cohort_list, type = "application/json")
cohort_list <- map_dfr(cohort_list[[1]], as_tibble)
View(cohort_list)
cohort_list <- httr::GET(url="http://localhost:8080/cohort",)
cohort_list <- httr::content(cohort_list, type = "application/json")
View(cohort_list)
cohort_list <- map_dfr(cohort_list[[1]], as_tibble)
View(cohort_list)
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
runApp('phycus/shiny-app/app')
